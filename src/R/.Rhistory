column_names=col.names)
breast.data <- breast.laf[ , ]
rm(list=ls())
tychoApiKey <- readLines(paste(Sys.getenv("HOME"), "/.tychoapi", sep=""), 1)
apiUrl <- "http://www.tycho.pitt.edu/api/"
queryUrl <- paste(apiUrl, "query?", sep="")
infoUrl <- paste(apiUrl, "info?", sep="")
# Add the api key to the given url. Optionally specify the format for the returned data (xml, txt, csv)
addApiKey <- function(url, key, format="csv") {
paste(url, "apikey=", key, ".", format, sep="")
}
# read a list of available data (like diseases, cities and states)
readList <- function (u) {
url <- paste(apiUrl, u, "?", sep="")
url <- addApiKey(url, tychoApiKey)
read.csv(url, stringsAsFactors=FALSE)
}
# build the URL for a query
query <- function (disease, state, event="cases", loc_type="state", city, start, end, format="csv") {
if (missing(disease))
stop("disease must be provided!")
if (missing(state))
stop("state must be provided!")
if (!(loc_type %in% c("city", "state")))
stop("loc_type must be either \"city\" or \"state\"")
if (loc_type=="city" && missing(city))
stop("A city must be specified when using loc_type=city")
url <- paste(queryUrl, "event=", event, "&loc_type=", loc_type, "&disease=", URLencode(disease),
"&state=", state, sep="")
if (!missing(city))
url <- paste(url, "&city=", URLencode(city), sep="")
if (!missing(start))
url <- paste(url, "&start=", URLencode(start), sep="")
if (!missing(end))
url <- paste(url, "&end=", URLencode(end), sep="")
url <- paste(url, "&", sep="")
addApiKey(url, tychoApiKey, format)
}
diseases <- readList("diseases")
cities <- readList("cities")
states <- readList("states")
chickenpox.wi <- read.csv(query(disease=diseases[4,1], state="WI"))
head(chickenpox.wi)
query <- function (apikey, disease, state, event="cases", loc_type="state", city, start, end, format="csv") {
if (!(loc_type %in% c("city", "state")))
stop("loc_type must be either \"city\" or \"state\"")
if (loc_type=="city" && missing(city))
stop("A city must be specified when using loc_type=city")
url <- paste(queryUrl, "event=", event, "&loc_type=", loc_type, "&disease=", URLencode(disease),
"&state=", state, sep="")
if (!missing(city))
url <- paste(url, "&city=", URLencode(city), sep="")
if (!missing(start))
url <- paste(url, "&start=", URLencode(start), sep="")
if (!missing(end))
url <- paste(url, "&end=", URLencode(end), sep="")
url <- paste(url, "&", sep="")
addApiKey(url, tychoApiKey, format)
}
chickenpox.wi <- read.csv(query(disease=diseases[4,1], state="WI"))
query <- function (apikey, disease, state, event="cases", loc_type="state", city, start, end, format="csv") {
if (missing(apikey))
stop("apikey must be provided!")
if (missing(disease))
stop("disease must be provided!")
if (missing(state))
stop("state must be provided!")
if (!(loc_type %in% c("city", "state")))
stop("loc_type must be either \"city\" or \"state\"")
if (loc_type=="city" && missing(city))
stop("A city must be specified when using loc_type=city")
url <- paste(queryUrl, "event=", event, "&loc_type=", loc_type, "&disease=", URLencode(disease),
"&state=", state, sep="")
if (!missing(city))
url <- paste(url, "&city=", URLencode(city), sep="")
if (!missing(start))
url <- paste(url, "&start=", URLencode(start), sep="")
if (!missing(end))
url <- paste(url, "&end=", URLencode(end), sep="")
url <- paste(url, "&", sep="")
addApiKey(url, apikey, format)
}
# build the URL for an info
info <- function(apikey, loc_type="state", event="cases", state, disease, loc, format="csv") {
if (missing(apikey))
stop("apikey must be provided!")
if (missing(disease) && missing(loc))
stop("must provide either disease or loc")
url <- paste(infoUrl, "event=", event, "&loc_type=", loc_type)
if (!missing(disease))
url <- paste(url, "&disease=", URLencode(disease), sep="")
if (!missing(state))
url <- paste(url, "&state=", state, sep="")
if (!missing(loc))
url <- paste(url, "&loc", loc, sep="")
url <- paste(url, "&", sep="")
addApiKey(url, apikey, format)
}
info(tychoApiKey)
info(tychoApiKey, disease="CHICKENPOX")
info <- function(apikey, loc_type="state", event="cases", state, disease, loc, format="csv") {
if (missing(apikey))
stop("apikey must be provided!")
if (missing(disease) && missing(loc))
stop("must provide either disease or loc")
url <- paste(infoUrl, "event=", event, "&loc_type=", loc_type, sep="")
if (!missing(disease))
url <- paste(url, "&disease=", URLencode(disease), sep="")
if (!missing(state))
url <- paste(url, "&state=", state, sep="")
if (!missing(loc))
url <- paste(url, "&loc", loc, sep="")
url <- paste(url, "&", sep="")
addApiKey(url, apikey, format)
}
info(tychoApiKey, disease="CHICKENPOX")
infotest = read.csv(info(tychoApiKey, disease="CHICKENPOX"))
diseases[4,1]
infotest = read.csv(info(tychoApiKey, disease=diseases[4,1]))
head(infotest)
source("tycho.R")
rm(list=ls())
tychoApiKey <- readLines(paste(Sys.getenv("HOME"), "/.tychoapi", sep=""), 1)
source("tycho.R")
diseases <- readList("diseases")
cities <- readList("cities")
states <- readList("states")
chickenpox.wi <- read.csv(query(disease=diseases[4,1], state="WI"))
head(chickenpox.wi)
head(chickenpox.wi, n=20)
head(subset(chickenpox.wi, year="1973"))
head(subset(chickenpox.wi, year=="1973"))
library(ggplot)
library(ggplot2)
qplot(year+week ~ number, data=chickenpox.wi)
qplot(week ~ number, data=chickenpox.wi)
qplot(week, number, data=chickenpox.wi)
qplot(year, number, data=chickenpox.wi)
head(diseases)
more(diseases)
diseases
mumps.wi <- read.csv(query(disease=diseases[4,1], state="WI"))
mumps.wi <- read.csv(query(disease=diseases[23,1], state="WI"))
qplot(year, number, data=mumps.wi)
summary(mumps.wi)
qplot(number, data="mumps.wi")
qplot(number, data=mumps.wi)
qplot(number, data=mumps.wi, geom="density")
library(RColorBrewer)
str(states)
list()
vector("list")
ll = list()
ll$one = 1
ll
ll["two"] = 2
ll
mumps <- diseases[4,1]
all.states = list()
for (state in states) {
all.states[state] <- read.csv(query(disease=mumps, state=state))
}
query
all.states
state
all.states = list()
for (s in states) {
all.states[s] <- read.csv(query(disease=mumps, state=s))
}
all.states = list()
for (s in states) {
print(paste("Reading data for ", s))
all.states[s] <- read.csv(query(disease=mumps, state=s))
}
states
all.states = list()
for (s in states$state) {
print(paste("Reading data for ", s))
all.states[s] <- read.csv(query(disease=mumps, state=s))
}
warnings()
all.states
all.states$WI
str(mumps.wi)
df <- data.frame()
for (s in states$state) {
print(paste("Reading data for ", s))
df <- rbind(df, read.csv(query(disease=mumps, state=s)))
}
head(df)
summary(df)
df$disease <- "MUMPS"
head(df)
df <- data.frame()
for (s in states$state) {
print(paste("Reading data for ", s))
newdf <- read.csv(query(disease=mumps, state=s)))
newdf$disease <- mumps
df <- rbind(df, newdf)
}
df <- data.frame()
for (s in states$state) {
print(paste("Reading data for ", s))
newdf <- read.csv(query(disease=mumps, state=s))
newdf$disease <- mumps
df <- rbind(df, newdf)
}
df <- data.frame()
for (s in states$state) {
print(paste("Reading data for ", s))
newdf <- read.csv(query(disease=mumps, state=s))
if (newdf != NULL) {
newdf$disease <- mumps
df <- rbind(df, newdf)
}
df <- data.frame()
for (s in states$state) {
print(paste("Reading data for ", s))
newdf <- read.csv(query(disease=mumps, state=s))
if (nrows(newdf) > 0) {
newdf$disease <- mumps
df <- rbind(df, newdf)
}
df <- data.frame()
for (s in states$state) {
print(paste("Reading data for ", s))
newdf <- read.csv(query(disease=mumps, state=s))
if (nrow(newdf) > 0) {
newdf$disease <- mumps
df <- rbind(df, newdf)
}
states.data <- data.frame()
for (d in diseases$disease) {
for (s in states$state) {
print(paste("Reading data for disease", d, "state", s))
newdf <- read.csv(query(disease=d, state=s))
if (nrow(newdf) > 0) {
newdf$disease <- d
states.data <- rbind(states.data, newdf)
}
states.data$disease <- as.factor(states.data$disease)
str(states.data)
summary(states.data)
head(subset(states.data, disease=="MEASLES"))
head(subset(states.data, disease %in% c("MEASLES")))
mumps.wi <- subset(states.data, disease=="MUMPS")
mumps.wi <- subset(states.data, disease==mumps)
head(mumps.wi)
diseases
mumps <- diseases[23,1]
mumps.wi <- subset(states.data, disease==mumps)
mumps.wi <- subset(states.data, disease==mumps && state="WI")
mumps.wi <- subset(states.data, disease==mumps && state=="WI")
head(states.data)
mumps.wi <- subset(states.data, state=="WI")
mumps.wi <- subset(states.data, state=="WI" & disease=mumps)
mumps.wi <- subset(states.data, state=="WI" & disease==mumps)
p <- ggplot(mumps.wi, aes(x=year, y=number)) + geom_bar()
p
p <- ggplot(mumps.wi, aes(x=year, y=number)) + geom_bar() + stat_identity()
p
p <- ggplot(mumps.wi, aes(x=year, y=number), stat="identity") + geom_bar()
p
p <- ggplot(mumps.wi, aes(x=year, y=number), stat="identity") + geom_bar(stat="identity")
p
p <- ggplot(mumps.wi, aes(x=paste(year,week,sep="/"), y=number)) + geom_bar(stat="identity")
p
p <- ggplot(mumps.wi, aes(x=paste(year,week,sep="/"), y=number)) + geom_bar(stat="identity") + scale_x_date()
p
p <- ggplot(mumps.wi[10,], aes(x=paste(year,week,sep="/"), y=number)) + geom_bar(stat="identity") + scale_x_date()
p
p <- ggplot(mumps.wi[10,], aes(x=paste(year,week,sep="/"), y=number)) + geom_bar(stat="identity")
p
p <- ggplot(mumps.wi[100,], aes(x=paste(year,week,sep="/"), y=number)) + geom_bar(stat="identity")
p
p <- ggplot(mumps.wi[150,], aes(x=paste(year,week,sep="/"), y=number)) + geom_bar(stat="identity")
p
mumps.wi[150,]
p <- ggplot(mumps.wi[1:10,], aes(x=paste(year,week,sep="/"), y=number)) + geom_bar(stat="identity")
p
summary(mumps.wi)
as.factor(mumps.wi$week)
states.data$year <- as.factor(states.data$year)
states.data$week <- as.factor(states.data$week)
mumps.wi <- subset(states.data, disease==mumps & state=="WI")
p <- ggplot(mumps.wi[1:10,], aes(x=paste(year,week,sep="/"), y=number)) + geom_bar(stat="identity")
p
p <- ggplot(mumps.wi[1:10,], aes(x=year+week, y=number)) + geom_bar(stat="identity")
p
sprintf("%2d", 3)
sprintf("%0d", 3)
sprintf("%02d", 3)
sprintf("%02d", 12)
sprintf("%02d", "3")
p <- ggplot(mumps.wi[1:10,], aes(x=paste(year, sprintf("%02d",week), sep="/"), y=number)) + geom_bar(stat="identity")
p
p <- ggplot(mumps.wi, aes(x=paste(year, sprintf("%02d",week), sep="/"), y=number)) + geom_bar(stat="identity")
p
View(states.data)
save(states.data, file="states.data.Rda")
p <- ggplot(mumps.wi, aes(x=paste(year, sprintf("%02d",week), sep="/"), y=number))
+ geom_bar(stat="identity")
+ scale_x_discrete(breaks=c("1972/01", "1973/02"))
p <- ggplot(mumps.wi, aes(x=paste(year, sprintf("%02d",week), sep="/"), y=number)) \
+ geom_bar(stat="identity") \
+ scale_x_discrete(breaks=c("1972/01", "1973/02")
p <- ggplot(mumps.wi, aes(x=paste(year, sprintf("%02d",week), sep="/"), y=number) +
geom_bar(stat="identity") +
scale_x_discrete(breaks=c("1972/01", "1973/02"))
p <- ggplot(mumps.wi, aes(x=paste(year, sprintf("%02d",week), sep="/"), y=number) + geom_bar(stat="identity") + scale_x_discrete(breaks=c("1972/01", "1973/02"))
)
p <- ggplot(mumps.wi, aes(x=paste(year, sprintf("%02d",week), sep="/"), y=number) + geom_bar(stat="identity") + scale_x_discrete(breaks=c("1972/01", "1973/02")))
p <- ggplot(mumps.wi, aes(x=paste(year, sprintf("%02d",week), sep="/"), y=number) + geom_bar(stat="identity") + scale_x_discrete("Week", breaks=c("1972/01", "1973/02")))
p <- ggplot(mumps.wi, aes(x=paste(year, sprintf("%02d",week), sep="/"), y=number) + geom_bar(stat="identity"))
p
p <- ggplot(mumps.wi, aes(x=paste(year, sprintf("%02d",week), sep="/"), y=number)) + geom_bar(stat="identity") + scale_x_discrete("Week", breaks=NULL)
p
p <- ggplot(mumps.wi, aes(x=paste(year, sprintf("%02d",week), sep="/"), y=number)) + geom_bar(stat="identity") + scale_x_discrete("Week", breaks=c("1972/01","1973/01"))
p
p <- ggplot(mumps.wi, aes(x=as.Date(paste("1", week, year, sep="-"), format = "%w-%W-%Y")), y=number)) + geom_bar(stat="identity")
p <- ggplot(mumps.wi, aes(x=as.Date(paste("1", week, year, sep="-"), format = "%w-%W-%Y"), y=number)) + geom_bar(stat="identity")
p
file.exists("states.data.Rda")
file.exists("states.data.Rd")
states.data <- read("states.data.Rda")
states.data <- load("states.data.Rda")
summary(states.data)
states.data
load("states.data.Rda")
summary(states.data)
rm(list=ls())
tychoApiKey <- readLines(paste(Sys.getenv("HOME"), "/.tychoapi", sep=""), 1)
source("tycho.R")
diseases <- readList("diseases")
cities <- readList("cities")
states <- readList("states")
mumps <- diseases[23,1]
# Build a data frame consisting of all the states
if (file.exists("states.data.Rda"))
load("states.data.Rda")
else {
states.data <- data.frame()
for (d in driseases$disease) {
for (s in states$state) {
print(paste("Reading data for disease", d, "state", s))
newdf <- read.csv(query(disease=d, state=s))
if (nrow(newdf) > 0) {
newdf$disease <- d
states.data <- rbind(states.data, newdf)
}
states.data$disease <- as.factor(states.data$disease)
states.data$year <- as.factor(states.data$year)
states.data$week <- as.factor(states.data$week)
}
# Make sure you put your Tycho API key (http://www.tycho.pitt.edu/apikey.php)
# in a file named .tychoapi in your home directory
tychoApiKey <- readLines(paste(Sys.getenv("HOME"), "/.tychoapi", sep=""), 1)
source("tycho.R")
diseases <- readList("diseases")
cities <- readList("cities")
states <- readList("states")
mumps <- diseases[23,1]
# Build a data frame consisting of all the states
if (file.exists("states.data.Rda"))
load("states.data.Rda")
else {
states.data <- data.frame()
for (d in diseases$disease) {
for (s in states$state) {
print(paste("Reading data for disease", d, "state", s))
newdf <- read.csv(query(disease=d, state=s))
if (nrow(newdf) > 0) {
newdf$disease <- d
states.data <- rbind(states.data, newdf)
}
states.data$disease <- as.factor(states.data$disease)
states.data$year <- as.factor(states.data$year)
states.data$week <- as.factor(states.data$week)
}
source("tycho.R")
diseases <- readList("diseases")
cities <- readList("cities")
states <- readList("states")
mumps <- diseases[23,1]
# Build a data frame consisting of all the states
if (file.exists("states.data.Rda"))
load("states.data.Rda")
else {
rm(list=ls())
# Make sure you put your Tycho API key (http://www.tycho.pitt.edu/apikey.php)
# in a file named .tychoapi in your home directory
tychoApiKey <- readLines(paste(Sys.getenv("HOME"), "/.tychoapi", sep=""), 1)
source("tycho.R")
diseases <- readList("diseases")
cities <- readList("cities")
states <- readList("states")
mumps <- diseases[23,1]
# Build a data frame consisting of all the states
if (file.exists("states.data.Rda"))
load("states.data.Rda")
else {
states.data <- data.frame()
for (d in diseases$disease) {
for (s in states$state) {
print(paste("Reading data for disease", d, "state", s))
newdf <- read.csv(query(disease=d, state=s))
if (nrow(newdf) > 0) {
newdf$disease <- d
states.data <- rbind(states.data, newdf)
}
states.data$disease <- as.factor(states.data$disease)
states.data$year <- as.factor(states.data$year)
states.data$week <- as.factor(states.data$week)
}
rm(list=ls())
# Make sure you put your Tycho API key (http://www.tycho.pitt.edu/apikey.php)
# in a file named .tychoapi in your home directory
tychoApiKey <- readLines(paste(Sys.getenv("HOME"), "/.tychoapi", sep=""), 1)
source("tycho.R")
diseases <- readList(tychoApiKey, "diseases")
cities <- readList(tychoApiKey, "cities")
states <- readList(tychoApiKey, "states")
mumps <- diseases[23,1]
# Build a data frame consisting of all the states
if (file.exists("states.data.Rda"))
load("states.data.Rda")
else {
states.data <- data.frame()
for (d in diseases$disease) {
for (s in states$state) {
print(paste("Reading data for disease", d, "state", s))
newdf <- read.csv(query(disease=d, state=s))
if (nrow(newdf) > 0) {
newdf$disease <- d
states.data <- rbind(states.data, newdf)
}
states.data$disease <- as.factor(states.data$disease)
states.data$year <- as.factor(states.data$year)
states.data$week <- as.factor(states.data$week)
}
rm(list=ls())
# Make sure you put your Tycho API key (http://www.tycho.pitt.edu/apikey.php)
# in a file named .tychoapi in your home directory
tychoApiKey <- readLines(paste(Sys.getenv("HOME"), "/.tychoapi", sep=""), 1)
source("tycho.R")
diseases <- readList(tychoApiKey, "diseases")
cities <- readList(tychoApiKey, "cities")
states <- readList(tychoApiKey, "states")
mumps <- diseases[23,1]
# Build a data frame consisting of all the states
if (file.exists("states.data.Rda")) {
load("states.data.Rda")
} else {
states.data <- data.frame()
for (d in diseases$disease) {
for (s in states$state) {
print(paste("Reading data for disease", d, "state", s))
newdf <- read.csv(query(disease=d, state=s))
if (nrow(newdf) > 0) {
newdf$disease <- d
states.data <- rbind(states.data, newdf)
}
states.data$disease <- as.factor(states.data$disease)
states.data$year <- as.factor(states.data$year)
states.data$week <- as.factor(states.data$week)
}
mumps.wi <- subset(states.data, disease==mumps & state=="WI")
p <- ggplot(mumps.wi, aes(x=as.Date(paste("1", week, year, sep="-"), format = "%w-%W-%Y"), y=number)) + geom_bar(stat="identity")
library(ggplot2)
# Subset to Wisconsin Mumps cases and plot
mumps.wi <- subset(states.data, disease==mumps & state=="WI")
p <- ggplot(mumps.wi, aes(x=as.Date(paste("1", week, year, sep="-"), format = "%w-%W-%Y"), y=number)) + geom_bar(stat="identity")
p
mumps.wi[mumps.wi$year == '1972',]
mumps.wi[mumps.wi$year == '1973',]
p <- ggplot(mumps.wi[mumps.wi$year=1972,], aes(x=as.Date(paste("1", week, year, sep="-"), format = "%w-%W-%Y"), y=number)) + geom_bar(stat="identity")
p <- ggplot(mumps.wi[mumps.wi$year==1972,], aes(x=as.Date(paste("1", week, year, sep="-"), format = "%w-%W-%Y"), y=number)) + geom_bar(stat="identity")
p
p <- ggplot(mumps.wi[mumps.wi$year==1972,], aes(x=as.Date(paste("1", week, year, sep="-"), format = "%w-%W-%Y"), y=number)) + geom_bar(stat="identity", position="fill")
p
p <- ggplot(mumps.wi[mumps.wi$year==1972,], aes(x=as.Date(paste("1", week, year, sep="-"), format = "%w-%W-%Y"), y=number), width=1) + geom_bar(stat="identity")
p
p <- ggplot(mumps.wi[mumps.wi$year==1972,], aes(x=as.Date(paste("1", week, year, sep="-"), format = "%w-%W-%Y"), y=number, width=1)) + geom_bar(stat="identity")
p
p <- ggplot(mumps.wi[mumps.wi$year==1972,], aes(x=as.Date(paste("1", week, year, sep="-"), format = "%w-%W-%Y"), y=number)) + geom_bar(stat="identity", width=1)
p
p <- ggplot(mumps.wi[mumps.wi$year==1972,], aes(x=as.Date(paste("1", week, year, sep="-"), format = "%w-%W-%Y"), y=number)) + geom_bar(stat="identity", width=5)
p
p <- ggplot(mumps.wi[mumps.wi$year==1972,], aes(x=as.Date(paste("1", week, year, sep="-"), format = "%w-%W-%Y"), y=number)) + geom_bar(stat="identity", width=10)
p
p <- ggplot(mumps.wi[mumps.wi$year==1972,], aes(x=as.Date(paste("1", week, year, sep="-"), format = "%w-%W-%Y"), y=number)) + geom_bar(stat="identity", width=5)
p
p <- ggplot(mumps.wi[mumps.wi$year==1972,], aes(x=as.Date(paste("1", week, year, sep="-"), format = "%w-%W-%Y"), y=number)) + geom_bar(stat="identity", width=7)
p
p <- ggplot(mumps.wi[mumps.wi$year==1972,], aes(x=as.Date(paste("1", week, year, sep="-"), format = "%w-%W-%Y"), y=number)) + geom_bar(stat="identity", width=6)
p
p <- ggplot(mumps.wi[mumps.wi$year==1972,], aes(x=as.Date(paste("1", week, year, sep="-"), format = "%w-%W-%Y"), y=number)) + geom_bar(stat="identity", width=7)
p
p <- ggplot(mumps.wi, aes(x=as.Date(paste("1", week, year, sep="-"), format = "%w-%W-%Y"), y=number)) + geom_bar(stat="identity", width=7)
p
summary(states.data)
subset(states.data, number==89363)
subset(states.data, number > 10000)
subset(states.data, number > 20000)
library(ggplot2)
p <- ggplot(mumps.wi, aes(x=as.Date(paste("1", week, year, sep="-"), format = "%w-%W-%Y"), y=number)) + geom_bar(stat="identity", width=7) + scale_y_continous("Cases") + scale_x_date("Week")
p <- ggplot(mumps.wi, aes(x=as.Date(paste("1", week, year, sep="-"), format = "%w-%W-%Y"), y=number)) + geom_bar(stat="identity", width=7) + scale_y_continuous("Cases") + scale_x_date("Week")
p
p <- ggplot(mumps.wi, aes(x=as.Date(paste("1", week, year, sep="-"), format = "%w-%W-%Y"), y=number))
+ geom_bar(stat="identity", width=7)
+ scale_y_continuous("Cases")
+ scale_x_date("Week")
